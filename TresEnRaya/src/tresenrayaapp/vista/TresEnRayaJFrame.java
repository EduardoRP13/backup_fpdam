/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tresenrayaapp.vista;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import tresenrayaapp.modelo.TresEnRaya;
import tresenrayaapp.modelo.Jugador;

/**
 *
 * @author yoli
 */
public class TresEnRayaJFrame extends javax.swing.JFrame {

    private JButton tablero[][];
    private JPanel pnlTablero;
    private TresEnRaya juego;
    /**
     * Creates new form TresEnRayaJFrame
     */
    public TresEnRayaJFrame() {
       initComponents();
       pnlTablero=pnlContenedorTablero;
       juego=new TresEnRaya(3);
       initDefaultValues();
       
       pack();
    }
    

 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupColor1 = new javax.swing.ButtonGroup();
        buttonGroupColor2 = new javax.swing.ButtonGroup();
        pnlConfig = new javax.swing.JPanel();
        pnlConfigJugador1 = new javax.swing.JPanel();
        lblNombreJugador1 = new javax.swing.JLabel();
        txtNombreJugador1 = new javax.swing.JTextField();
        pnlJugador1Color = new javax.swing.JPanel();
        lblColor1 = new javax.swing.JLabel();
        rbJugador1Rojo = new javax.swing.JRadioButton();
        rbJugador1Azul = new javax.swing.JRadioButton();
        pnlConfigJugador2 = new javax.swing.JPanel();
        lblNombreJugador2 = new javax.swing.JLabel();
        txtNombreJugador2 = new javax.swing.JTextField();
        pnlJugador2Color = new javax.swing.JPanel();
        lblColor2 = new javax.swing.JLabel();
        rbJugador2Rojo = new javax.swing.JRadioButton();
        rbJugador2Azul = new javax.swing.JRadioButton();
        lblTamanoTablero = new javax.swing.JLabel();
        cbTamanoTablero = new javax.swing.JComboBox<>();
        pnlBotonera = new javax.swing.JPanel();
        btnJugar = new javax.swing.JButton();
        btnAbandonar = new javax.swing.JButton();
        pnlJuego = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblTurno = new javax.swing.JLabel();
        pnlContenedorTablero = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tres en Raya");
        setPreferredSize(new java.awt.Dimension(400, 600));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pnlConfig.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuración de la partida"));
        pnlConfig.setLayout(new java.awt.GridBagLayout());

        pnlConfigJugador1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Jugador 1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        pnlConfigJugador1.setLayout(new java.awt.GridBagLayout());

        lblNombreJugador1.setText("Nombre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        pnlConfigJugador1.add(lblNombreJugador1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pnlConfigJugador1.add(txtNombreJugador1, gridBagConstraints);

        lblColor1.setText("Color: ");
        pnlJugador1Color.add(lblColor1);

        buttonGroupColor1.add(rbJugador1Rojo);
        rbJugador1Rojo.setText("Rojo");
        rbJugador1Rojo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ejecutarAccionCambioEstadoRbJugador1Rojo(evt);
            }
        });
        pnlJugador1Color.add(rbJugador1Rojo);

        buttonGroupColor1.add(rbJugador1Azul);
        rbJugador1Azul.setText("Azul");
        pnlJugador1Color.add(rbJugador1Azul);

        pnlConfigJugador1.add(pnlJugador1Color, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        pnlConfig.add(pnlConfigJugador1, gridBagConstraints);

        pnlConfigJugador2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Jugador 2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        pnlConfigJugador2.setLayout(new java.awt.GridBagLayout());

        lblNombreJugador2.setText("Nombre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        pnlConfigJugador2.add(lblNombreJugador2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pnlConfigJugador2.add(txtNombreJugador2, gridBagConstraints);

        lblColor2.setText("Color: ");
        pnlJugador2Color.add(lblColor2);

        buttonGroupColor2.add(rbJugador2Rojo);
        rbJugador2Rojo.setText("Rojo");
        rbJugador2Rojo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ejecutarAccionCambioEstadoRbJugador2Rojo(evt);
            }
        });
        pnlJugador2Color.add(rbJugador2Rojo);

        buttonGroupColor2.add(rbJugador2Azul);
        rbJugador2Azul.setText("Azul");
        pnlJugador2Color.add(rbJugador2Azul);

        pnlConfigJugador2.add(pnlJugador2Color, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 3);
        pnlConfig.add(pnlConfigJugador2, gridBagConstraints);

        lblTamanoTablero.setText("Tamaño del Tablero: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 7, 7);
        pnlConfig.add(lblTamanoTablero, gridBagConstraints);

        cbTamanoTablero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3 x 3", "4 x 4", "5 x 5", "6 x 6" }));
        cbTamanoTablero.setPreferredSize(new java.awt.Dimension(120, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        pnlConfig.add(cbTamanoTablero, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        getContentPane().add(pnlConfig, gridBagConstraints);

        btnJugar.setText("Jugar");
        btnJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarAccionBtonJugar(evt);
            }
        });
        pnlBotonera.add(btnJugar);

        btnAbandonar.setText("Abandonar");
        btnAbandonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarAccionBtnAbandonar(evt);
            }
        });
        pnlBotonera.add(btnAbandonar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(pnlBotonera, gridBagConstraints);

        pnlJuego.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pnlJuego.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Turno:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlJuego.add(jLabel1, gridBagConstraints);

        lblTurno.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTurno.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        pnlJuego.add(lblTurno, gridBagConstraints);

        pnlContenedorTablero.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlContenedorTablero.setLayout(new java.awt.GridLayout(1, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        pnlJuego.add(pnlContenedorTablero, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(pnlJuego, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void ejecutarAccionCambioEstadoRbJugador1Rojo(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ejecutarAccionCambioEstadoRbJugador1Rojo
        if(evt.getStateChange()==ItemEvent.SELECTED){
            rbJugador2Azul.setSelected(true);
        }else{
            rbJugador2Rojo.setSelected(true);
        }
    }//GEN-LAST:event_ejecutarAccionCambioEstadoRbJugador1Rojo

    private void ejecutarAccionCambioEstadoRbJugador2Rojo(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ejecutarAccionCambioEstadoRbJugador2Rojo
         if(evt.getStateChange()==ItemEvent.SELECTED){
            rbJugador1Azul.setSelected(true);
        }else{
            rbJugador1Rojo.setSelected(true);
        }
    }//GEN-LAST:event_ejecutarAccionCambioEstadoRbJugador2Rojo

    private int getSelectTamanoTablero(){
      return cbTamanoTablero.getSelectedIndex()+3;
    }    
    private void setSelectTamanoTablero(int size){
        cbTamanoTablero.setSelectedIndex(size-3);
    }
    private String getSelectColor(JRadioButton rbRojoJugador){
        return (rbRojoJugador.isSelected())?TresEnRaya.COLOR_ROJO:TresEnRaya.COLOR_AZUL;
    }
    private void ejecutarAccionBtonJugar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarAccionBtonJugar
        juego.inicializarJuego(getSelectTamanoTablero(),txtNombreJugador1.getText(), getSelectColor(rbJugador1Rojo), txtNombreJugador2.getText(), getSelectColor(rbJugador1Azul));
        initTablero(juego.getTamanhoTablero());
        
        establecerTurno();
        
        btnAbandonar.setEnabled(true);
        btnJugar.setEnabled(false);
        
        setEnabledPnlConfig(false);
        setEnabledTablero(true);
    }//GEN-LAST:event_ejecutarAccionBtonJugar

    private void ejecutarAccionBtnAbandonar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarAccionBtnAbandonar
        finalizarJuego();
    }//GEN-LAST:event_ejecutarAccionBtnAbandonar

    private void establecerTurno(){
         Jugador jugador=juego.getJugadorTurno();
         lblTurno.setText(jugador.getNickName());
         lblTurno.setForeground(getAWTColor(jugador.getColor()));
    }    
    private void limpiarTurno(){
        lblTurno.setText("");
    }
     private void ejecutarAccionBtnCeldaTablero(java.awt.event.ActionEvent evt, int columna, int fila) {                                         
        // TODO add your handling code here:
        System.out.println("Presionado el botón columna: "+columna+" fila: "+fila );
        Jugador jugador=juego.getJugadorTurno();
        JButton boton=tablero[columna][fila];
                
        int estado=juego.realizarJugada(jugador,columna, fila);
        if(estado!=TresEnRaya.MOV_INVALIDO){

            boton.setBackground(getAWTColor(jugador.getColor()));
            switch(estado){
                case TresEnRaya.EN_PROGRESO:
                    establecerTurno();
                    break;
                case TresEnRaya.FINALIZADO_GANADO:
                    JOptionPane.showMessageDialog(this,String.format("¡Enhorabuena %s!\nHas ganado la partida.",jugador.getNickName()));
                    finalizarJuego();
                    break;
                case TresEnRaya.FINALIZADO_EMPATADO:
                    JOptionPane.showMessageDialog(this,"¡EMPATE!\nNo hay más movimientos posibles.");
                    finalizarJuego();
                    break;
            }
            
        }else{
            //cualquier cosa que se quiera hacer para avisar al usuario
        }
        
        
      
    }
     private void finalizarJuego(){
        
       // initTablero(juego.getTamanhoTablero());
        limpiarTurno();
        
        btnAbandonar.setEnabled(false);
        btnJugar.setEnabled(true);
        
        setEnabledPnlConfig(true);
        setEnabledTablero(false);
     }

    private void setSelectColor(String color, JRadioButton rbRojo, JRadioButton rbAzul) {
        if(color.equals(TresEnRaya.COLOR_AZUL)){
            rbAzul.setSelected(true);
        }else{
            rbRojo.setSelected(true);
        }

    }
    private void initDefaultValues(){
        Jugador jugador=juego.getJugador(0);
        setSelectColor(jugador.getColor(),rbJugador1Rojo, rbJugador1Azul);
        jugador=juego.getJugador(1);
        setSelectColor(jugador.getColor(),rbJugador2Rojo, rbJugador2Azul);
        
        setSelectTamanoTablero(juego.getTamanhoTablero());
        

        btnAbandonar.setEnabled(false);
        initTablero(juego.getTamanhoTablero());
        setEnabledTablero(false);
        lblTurno.setText("");

    } 
    
    private void setEnabledPnlConfig(boolean enabled){
        txtNombreJugador1.setEnabled(enabled);
        txtNombreJugador2.setEnabled(enabled);
        rbJugador1Rojo.setEnabled(enabled);
        rbJugador1Azul.setEnabled(enabled);
        rbJugador2Rojo.setEnabled(enabled);
        rbJugador2Azul.setEnabled(enabled);
        cbTamanoTablero.setEnabled(enabled);
    }
    private void setEnabledTablero(boolean enabled){
        for(Component c:pnlTablero.getComponents()){
            c.setEnabled(enabled);
        }
    }
    
    private void initTablero(int size){

        pnlTablero.removeAll();
        pnlTablero.setLayout(new java.awt.GridLayout(size, size));
        tablero = new JButton [size][size];
        
        for(int i=0; i<size; i++){
            for(int j=0; j<size; j++){
                tablero[i][j]= new JButton();
                tablero[i][j].addActionListener(new CeldaTableroAdapter(i, j));
                pnlTablero.add(tablero[i][j]);
                
            }
        }
        
        pnlTablero.revalidate();
        pnlTablero.repaint();
  
 
    }
    
    
    private Color getAWTColor(String color){
        
        if(color.equals(TresEnRaya.COLOR_ROJO)){
            return Color.RED;
        }else{
            return Color.BLUE;
        } 

    }
    /**
     * @param args the command line arguments
     */
 
    class CeldaTableroAdapter implements ActionListener{
        private int columna;
        private int fila;
        
        CeldaTableroAdapter(int columna, int fila){
            this.columna=columna;
            this.fila=fila;
        }
        @Override
        public void actionPerformed(ActionEvent e) {
            ejecutarAccionBtnCeldaTablero(e, columna, fila);
        }
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbandonar;
    private javax.swing.JButton btnJugar;
    private javax.swing.ButtonGroup buttonGroupColor1;
    private javax.swing.ButtonGroup buttonGroupColor2;
    private javax.swing.JComboBox<String> cbTamanoTablero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblColor1;
    private javax.swing.JLabel lblColor2;
    private javax.swing.JLabel lblNombreJugador1;
    private javax.swing.JLabel lblNombreJugador2;
    private javax.swing.JLabel lblTamanoTablero;
    private javax.swing.JLabel lblTurno;
    private javax.swing.JPanel pnlBotonera;
    private javax.swing.JPanel pnlConfig;
    private javax.swing.JPanel pnlConfigJugador1;
    private javax.swing.JPanel pnlConfigJugador2;
    private javax.swing.JPanel pnlContenedorTablero;
    private javax.swing.JPanel pnlJuego;
    private javax.swing.JPanel pnlJugador1Color;
    private javax.swing.JPanel pnlJugador2Color;
    private javax.swing.JRadioButton rbJugador1Azul;
    private javax.swing.JRadioButton rbJugador1Rojo;
    private javax.swing.JRadioButton rbJugador2Azul;
    private javax.swing.JRadioButton rbJugador2Rojo;
    private javax.swing.JTextField txtNombreJugador1;
    private javax.swing.JTextField txtNombreJugador2;
    // End of variables declaration//GEN-END:variables
}
